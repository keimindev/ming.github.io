I"î<p>leetCode <a href="https://https://leetcode.com/problems/counting-bits/">338. Counting Bits</a>.</p>

<hr />

<p>Given an integer <code class="language-plaintext highlighter-rouge">n</code>, return an array ans of length <code class="language-plaintext highlighter-rouge">n + 1</code> such that for each <code class="language-plaintext highlighter-rouge">i</code> (0 &lt;= i &lt;= n), <code class="language-plaintext highlighter-rouge">ans[i]</code> is <code class="language-plaintext highlighter-rouge">the number of 1's</code> in the binary representation of <code class="language-plaintext highlighter-rouge">i</code>.</p>

<p>Example 1:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: n <span class="o">=</span> 2
Output: <span class="o">[</span>0,1,1]
Explanation:
0 <span class="nt">--</span><span class="o">&gt;</span> 0
1 <span class="nt">--</span><span class="o">&gt;</span> 1
2 <span class="nt">--</span><span class="o">&gt;</span> 10
</code></pre></div></div>

<p>Example 2:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: n <span class="o">=</span> 5
Output: <span class="o">[</span>0,1,1,2,1,2]
Explanation:
0 <span class="nt">--</span><span class="o">&gt;</span> 0
1 <span class="nt">--</span><span class="o">&gt;</span> 1
2 <span class="nt">--</span><span class="o">&gt;</span> 10
3 <span class="nt">--</span><span class="o">&gt;</span> 11
4 <span class="nt">--</span><span class="o">&gt;</span> 100
5 <span class="nt">--</span><span class="o">&gt;</span> 101
</code></pre></div></div>

<hr />

<h4 id="approach">Approach</h4>

<p>First, I thought about using a for loop to iterate over the given <code class="language-plaintext highlighter-rouge">n</code> and converting each <code class="language-plaintext highlighter-rouge">i</code> decimal number to binary to create a new array.</p>

<h4 id="how-to-covert-number-to-binary">How to covert number to binary</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>  
</code></pre></div></div>

<h4 id="how-to-covert-number-to-array">How to covert number to Array</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">number</span><span class="p">))</span>
</code></pre></div></div>

<p>and then use <kbd>Array.reduce()</kbd> for the return value from the calculation on the preceding element</p>

<h4 id="solution">Solution</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">countBits</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">result</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
       <span class="kd">let</span> <span class="nx">temp</span> <span class="o">=</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
       <span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">temp</span><span class="p">)).</span><span class="nx">reduce</span><span class="p">((</span><span class="nx">acc</span><span class="p">,</span><span class="nx">cur</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">acc</span><span class="p">)</span> <span class="o">+</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">cur</span><span class="p">))</span>
       <span class="nx">result</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="nx">result</span>
    
<span class="p">};</span>
</code></pre></div></div>

:ET